[general.global.verbosity]
widget_type = "scale"
data_type = "int"
values = [0, 3, 1]
default = 2
[general.global.use_rmm]
widget_type = "switch"
data_type = "bool"
default = false


[general.parameters.booster]
widget_type = "combo"
data_type = "str"
values = ["gbtree", "gblinear", "dart"]
[general.parameters.verbosity]
widget_type = "scale"
data_type = "int"
values = [0, 3, 1]
default = 2
invisible_on = { argument = "general.parameters.booster", value = "gblinear" }
[general.parameters.validate_parameters]
widget_type = "switch"
default = "false"
invisible_on = { argument = "general.parameters.booster", value = "gblinear" }
[general.parameters.nthread]
widget_type = "scale"
data_type = "int"
values = [1, 8, 1]
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear" }
[general.parameters.disable_default_eval_metric]
widget_type = "switch"
default = false
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.booster.eta]
widget_type = "scale"
data_type = "float"
values = [0, 1, 0.01]
default = 0.3
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.gamma]
widget_type = "entry"
data_type = "float"
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.max_depth]
widget_type = "entry"
data_type = "int"
default = 6
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.min_child_weight]
widget_type = "entry"
data_type = "int"
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.subsample]
widget_type = "scale"
data_type = "float"
values = [0.01, 1, 0.01]
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.sampling_method]
widget_type = "combo"
data_type = "string"
values = ["uniform", "gradient_based"]
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.col_samples.colsample_bytree]
widget_type = "scale"
data_type = "float"
values = [0.01, 1, 0.01]
default = 0.5
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.col_samples.colsample_bylevel]
widget_type = "scale"
data_type = "float"
values = [0.01, 1, 0.01]
default = 0.5
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.col_samples.colsample_bynode]
widget_type = "scale"
data_type = "float"
values = [0.01, 1, 0.01]
default = 0.5
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.lambda]
widget_type = "entry"
data_type = "float"
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.alpha]
widget_type = "entry"
data_type = "float"
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.tree_method]
widget_type = "combo"
data_type = "str"
values = ["auto", "exact", "approx", "hist", "gpu_hist"]
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.sketch_eps]
widget_type = "entry"
data_type = "float"
default = 0.03
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.scale_pos_weight]
widget_type = "entry"
data_type = "float"
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
# [general.parameters.updater]
# widget_type = "entry"
# data_type = "str"
# invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.refresh_leaf]
widget_type = "switch"
default = true
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.process_type]
widget_type = "combo"
data_type = "str"
values = ["default", "update"]
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.grow_policy]
widget_type = "combo"
data_type = "str"
values = ["depthwise", "lossguide"]
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.max_leaves]
widget_type = "entry"
data_type = "int"
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.max_bin]
widget_type = "entry"
data_type = "int"
default = 256
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.predictor]
widget_type = "combo"
data_type = "str"
values = ["auto", "cpu_predictor", "gpu_predictor"]
default = 0
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.num_parallel_tree]
widget_type = "entry"
data_type = "int"
default = 1
invisible_on = { argument = "general.parameters.booster", value = "gblinear"}
[general.parameters.single_precision_histogram]
widget_type = "switch"
default = false
enabled_on = { argument = "general.parameters.tree_method", value = ["hist", "gpu_hist", "approx"] }

[learning.train.max_depth]
widget_type = "entry"
data_type = "int"
default = 2
[learning.train.eta]
widget_type = "combo"
data_type = "int"
values = [0, 1, 2]
default = 1
[learning.train.objective]
widget_type = "combo"
data_type = "str"
values = [
    "reg:squarederror", "reg:squaredlogerror", "reg:logistic", "reg:pseudohubererror",
    "binary:logistic", "binary:logitraw", "binary:hinge",
    "count:poisson",
    "survival:cox", "survival:aft", "survival:aft",
    "multi:softmax", "multi:softprob",
    "rank:pairwise", "rank:ndcg", "rank:map",
    "reg:gamma", "reg:tweedie",
]
default = -1
[learning.train.base_score]
widget_type = "scale"
data_type = "float"
default = 0.5
[learning.train.eval_metric]
widget_type = "combo"
data_type = "str"
default = 0
values = [
    "rmse", "rmsle",
    "mae", "mape", "mphe",
    "logloss",
    "error", "error@t",
    "merror", "mlogloss",
    "auc", "aucpr",
    "ndcg", "ndcg@n",
    "map", "map@n",
    "poisson-nloglik", "gamma-nloglik", "cox-nloglik", "tweedie-nloglik", "aft-nloglik",
    "gamma-deviance", "interval-regression-accuracy",
]
[learning.train.seed]
widget_type = "entry"
data_type = "int"
default = 0
[learning.train.seed_per_iteration]
widget_type = "switch"
data_type = "bool"
default = false
[learning.train.tweedie_variance_power]
widget_type = "scale"
data_type = "float"
values = [1, 2, 0.01]
enabled_on = { argument = "learning.train.objective", value = "reg:tweedie" }
[learning.train.huber_slope]
widget_type = "entry"
data_type = "float"
enabled_on = { argument = "learning.train.objective", value = "reg:pseudohubererror" }
default = 1.0
